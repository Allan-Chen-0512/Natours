//Video 34: Building a Custom Grid with floats

.row{
    //standard width for grids
    // note that we did not give any height to the rows, meaning the cells can be of any height
    // width: 114rem; 
    max-width: $grid-width;
    // background-color: #eee; testing purposes
    margin: 0 auto;
    
    &:not(:last-child){
        margin-bottom: $gutter_vertical;

        @include respond(tab-port){
            // rems in media queries are relative to browser font size
            margin-bottom: $gutter_vertical-small;
        }
    }

    // media query for ".row"
    @include respond(tab-port){
        // rems in media queries are relative to browser font size
        max-width: 50rem;
        padding: 0 3rem
    }

    @include clearfix;

    .col-1-of-2 {
        // to use a Sass variable in css we need #{ } , since the calc function is preformed by css during the visual formatting phase
        width: calc((100% - #{$gutter-horizontal}) / 2);

        // background-color: orangered; testing purposes

        float: left;

        &:not(:last-child){
            margin-right: $gutter-horizontal;
        }
        
    }

    // all elements where class starts with "col-"
    [class^="col-"]{
        
        // background-color: orangered; testing purposes

        float: left;

        &:not(:last-child){
            margin-right: $gutter-horizontal;

            @include respond(tab-port){
                margin-right: 0;
                margin-bottom: $gutter_vertical-small;
            }

        }

        @include respond(tab-port){
            width: 100% !important;
        }
    }

    .col-1-of-3 {
        width: calc(  (100% - 2*#{$gutter-horizontal})/3);     
    }

    .col-2-of-3 {
        width: calc(  (2*(100% - 2*#{$gutter-horizontal})/3)  +  #{$gutter-horizontal} );    
    }

    .col-1-of-4 {
        width: calc(  (100% - 3*#{$gutter-horizontal})/4);     
    }

    .col-2-of-4 {
        width: calc(  (2*(100% - 3*#{$gutter-horizontal})/4) + #{$gutter-horizontal} );     
    }

    .col-3-of-4 {
        width: calc(  (3*(100% - 3*#{$gutter-horizontal})/4) +  (2*#{$gutter-horizontal}) );     
    }

}


